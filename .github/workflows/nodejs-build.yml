name: Node.js CI/CD Pipeline  # 工作流名

on:                           # 触发器，定义何时运行此工作流
  push:
    branches: [main]          # 默认分支名!
  pull_request:
    branches: [main]
    workflow_dispatch:        # 手动执行

jobs:                         # 工作流
  build:                      # 作业 - obsidian插件
    runs-on: ubuntu-latest    # 环境 - 基于镜像
    steps:                    # 作业步骤！(name是可选的，但我都加上了方便调试和修改)
    - name: checkout repo
      uses: actions/checkout@v4   # 检出代码 (使用的是官方提供的action)
    - name: env use node.js
      uses: actions/setup-node@v4 # 配置node环境 (使用的是官方提供的action)，Node.js版本
      with:
        node-version: '20'
    - name: npm depend1
      run: npm ci                 # (npm ci代替npm install以获得更快的速度)
    - name: npm build
      run: npm run build
    - name: upload build artifact
      if: always()                      # 即使之前的构建步骤失败，也会上载构建产物
      uses: actions/upload-artifact@v4  # 保存构建产物 (使用的是官方提供的action)
      with:
        name: build-artifact            # 构建产物的名称
        path: |                         # 构建产物的路径
          main.js
          styles.css
          manifest.json

  build-app:                    # 作业 - app构建部分
    runs-on: ubuntu-latest
    steps:
    - name: Env - Checkout
      uses: actions/checkout@v4
    - name: Env - Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Build
      run: |
        # npm run app:build
        npm ci
        cd ./src/App/
        npm ci
        npm run build
        > ./dist/.nojekyll
    - name: Build - Dist to Website Branch
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        # 这是文档部署到的分支名称
        branch: gh-pages
        folder: src/App/dist
